const BasicHub = require('./_setup')
const direct_stream_plugin = require('msg-fabric-core/cjs/plugin-net-direct')
const Hub = BasicHub.plugin @ direct_stream_plugin()

const ha = Hub.create('$ha$')
const hb = Hub.create('$hb$')
const hc = Hub.create('$hc$')

const msg_apple = addTarget @ 'ha_apple', ha.local
const msg_orange = addTarget @ 'ha_orange', ha.local

const msg_snake = addTarget @ 'hb_snake', hb.local
const msg_turtle = addTarget @ 'hb_turtle', hb.local

const msg_crow = addTarget @ 'hc_crow', hc.local
const msg_hawk = addTarget @ 'hc_hawk', hc.local

function addTarget(id_target, {id_route, addTarget}) ::
  addTarget @ id_target, pkt => ::
    console.log @ `"${id_target}" recieved packet`, pkt
    console.dir @ pkt.body, {colors:true}
    console.log()

  return body => @: id_target, id_route, body


console.log()

Promise.resolve()
.then @ do_ha_local
//.then @ do_ha_remote // will not work before do_connect
.then @ do_connect
.then @ do_ha_remote

async function do_connect() ::
  const chan_ab = await ha.direct_stream.connect(hb)
  const chan_ac = await ha.direct_stream.connect(hc)

  chan_ab.send @ msg_turtle @: hello: 'soup', mode: 'channel'
  chan_ab.send @ msg_snake @: hello: 'bites', mode: 'channel'

  chan_ac.send @ msg_crow @: look: 'shiny', mode: 'channel'
  chan_ac.send @ msg_hawk @: look: 'a bunny!', mode: 'channel'


async function do_ha_local() ::
  ha.send @ msg_apple @: goodbye: 'doctor', mode: 'local'
  ha.send @ msg_orange @: goodbye: 'scurvy', mode: 'local'


async function do_ha_remote() ::
  ha.send @ msg_turtle @: hello: 'soup', mode: 'remote'
  ha.send @ msg_snake @: hello: 'bites', mode: 'remote'

  ha.send @ msg_crow @: look: 'shiny!', mode: 'remote'
  ha.send @ msg_hawk @: look: 'a bunny!', mode: 'remote'

