import { createServer as _tcp_server, createConnection as _tcp_connect } from 'net'
import net_common from './_net_common.jsy'

export default function tcp_plugin(plugin_options={}) ::
  const on_url_connect = plugin_options.on_url_connect
  const protocol = plugin_options.protocol || 'tcp'
  function asURL() :: return `${protocol}://${this.address}:${this.port}`

  return function(hub) ::
    const _common_ = net_common @ hub, asURL

    hub.registerConnectionProtocol @ `${protocol}:`,
      url => connect @ _common_.unpackConnectURL(url, on_url_connect)
    return hub[protocol] = @{} connect, createServer

    function connect(...args) ::
      args = _common_.unpackConnectArgs(args)
      return _common_.createClient @
        handler => _tcp_connect @ ...args, handler

    function createServer(onPeer) ::
      return _common_.createServer @ onPeer,
        handler => _tcp_server @ handler
