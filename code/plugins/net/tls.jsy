import { createServer as _tls_server, connect as _tls_connect } from 'tls'
import net_common from './_net_common.jsy'

export default function tls_plugin(plugin_options={}) ::
  const on_url_connect = plugin_options.on_url_connect
  const protocol = plugin_options.protocol || 'tls'
  function asURL() :: return `${protocol}://${this.address}:${this.port}`

  return function(hub) ::
    const _common_ = net_common(hub, asURL)

    hub.registerConnectionProtocol @ `${protocol}:`,
      url => connect @ _common_.unpackConnectURL(url, on_url_connect)

    const plugin = Object.assign @ connect, @{}
      connect, createServer
    return hub[protocol] = plugin

    function connect(...args) ::
      args = _common_.unpackConnectArgs(args)
      return _common_.createClient @
        handler => _tls_connect @ ...args, handler

    function createServer(tls_options, onPeer) ::
      return _common_.createServer @ onPeer,
        handler => _tls_server @ tls_options, handler
