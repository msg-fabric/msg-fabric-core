import { o_assign, as_func } from './builtins.jsy'

export function bindXTargetAPI(tgt_router, targets_map, id_route, router) ::
  const target_api = @{}
    __proto__: router.router_ctx

    use(target) ::
      this.enable @ this.target = target
      return this
    enable(target) ::
      if undefined === target :: target = this.target
      targets_map.set @ this.id.id_target, as_func(target)

    until(p, target) ::
      // disable the ephemeral if same target
      const k = this.id.id_target
      if true === target :: target = this.target
      const dis = null == target ? this.disable : @=> ::
        if target === targets_map.get(k) ::
          targets_map.delete(k)

      p.then(dis, dis)
      return this

  const reply_target_api = o_assign @
    @{} __proto__: target_api
    reply_target_base_api

  return @[] target_api, reply_target_api


const reply_target_base_api = @{}
  then(y,n) :: return this.ans.then(y,n)
  catch(f) :: return this.ans.catch(f)
  finally(f) :: return this.ans.finally(f)

  untilAnswer(p) ::
    return this.until @ this.ans = p, this.target

  untilReply(ms_timeout=1000, absent, on_reply) ::
    if undefined === on_reply ::
      on_reply = absent
      absent = undefined

    return this.untilAnswer @ 
      new Promise @ resolve => ::
        this.enable @ pkt => resolve @ on_reply(pkt)

        if ms_timeout ::
          this.timeouts.absent @
            ms_timeout, resolve, absent

