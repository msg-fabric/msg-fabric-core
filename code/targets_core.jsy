import { as_func, p_then } from './builtins.jsy'
import { ao_push_stream } from './timeouts.jsy'


export function bindCoreDispatchTarget(tgt_router, targets_map, id_route, router) ::
  // as closures over private variables (targets_map)
  return @{} ready: _add_target_route(id_route)

  async function target_route(pkt, pktctx) ::
    let id_target = pkt[1] || ''
    let target = targets_map.get(id_target)

    if undefined === target ::
      await tgt_router.discoverTarget(id_target, pktctx)
      target = targets_map.get(id_target)

      if undefined === target ::
        let channel = pktctx.channel
        return channel && channel.undeliverable(pkt, 'target')

    // Trigger on_sent for internal hub routing
    p_then(pkt.on_sent, pkt)

    pktctx.tgt_router = tgt_router
    await target(pkt, pktctx)


  async function _add_target_route(id_route) ::
    if 'string' !== typeof id_route ::
      id_route = await id_route
    tgt_router.id_route = target_route.id_route = id_route
    router.addRoute @ id_route, target_route, true
    return true


export function bindCoreTargetAPI(tgt_router, targets_map, id_route, router) ::
  return @{}
    addTarget
    hasTarget: id_target => targets_map.has(id_target)
    getTarget: id_target => targets_map.get(id_target)

    removeTarget: id_target =>
      targets_map.delete @
        'string'===typeof id_target
          ? id_target
          : id_target[1]

    xstream
    xtgt: id_target => xstream(id_target, router.xtgt_api)
    xresp: id_target => xstream(id_target, router.xresp_api)

    ... bindCoreDispatchTarget @
          tgt_router, targets_map,
          id_route, router

  function addTarget(id_target, target) ::
    let id = @[] id_route, id_target || tgt_router.newTargetId()
    if null != target ::
      targets_map.set @ id[1], as_func(target)
    return id

  function xstream(id_target, xapi) ::
    let {stream, when_done, abort, push} = ao_push_stream(true)
    let id = addTarget(id_target, push)
    tgt_router.removeAfter(id, when_done)
    return @{} __proto__: xapi, id, stream, abort, when_done, tgt_router

