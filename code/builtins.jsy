export const ::{}
  assign: o_assign,
  create: o_create,
  freeze: o_freeze,
  defineProperties: o_defprop,
= Object

export const is_array = Array.isArray

export const is_func = fn =>
  'function' === typeof fn

export const as_func = fn => ::
  if 'function' !== typeof fn ::
    throw new TypeError
  return fn

export const p_res = v =>
  Promise.resolve(v)

export const p_then = (fn, v) =>
  is_func(fn) && p_res(v).then(fn)

export const _unref = o =>
  o.unref ? (o.unref(), o) : o

export const _ref = o =>
  o.ref ? (o.ref(), o) : o
