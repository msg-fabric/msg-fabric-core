import {bindDispatchMsgRaw} from './streams'


export class MessageChannel ::
  sendRaw() :: throw new Error @ `Instance responsiblity`
  pack() :: throw new Error @ `Instance responsiblity`

  sendJSON(msg_obj, ...args) ::
    const msg = this.packJSON(msg_obj)
    return this.sendRaw @ msg, ...args

  packJSON(msg_obj) ::
    if undefined !== msg_obj.header ::
      msg_obj.header = JSON.stringify @ msg_obj.header
    if undefined !== msg_obj.body ::
      msg_obj.body = JSON.stringify @ msg_obj.body

    return this.pack(msg_obj)



  static asChannelAPI(hub, router, packetStream) ::
    const self = new this()
    Object.defineProperties @ self, @:
      pack: @: value: packetStream.packMessage
      router: @: value: router
      hub: @: value: hub

    return self

  static asInternalAPI(hub, router, packetStream) ::
    const self = new this()
    Object.defineProperties @ self, @:
      pack: @: value: packetStream.packMessageObj
      router: @: value: router
      hub: @: value: hub

    bindDispatchMsgRaw(self)
    return self

