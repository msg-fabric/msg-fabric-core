const isBuffer = Buffer.isBuffer

export function base64() ::
  return this._body_.toString('base64')

export function encode_utf8(str) ::
  if isBuffer(str) :: return str
  return Buffer.from(str, 'utf-8')

export function decode_utf8(buf) ::
  if ! isBuffer(buf) ::
    buf = Buffer.from(buf)
  return buf.toString('utf-8')

export function unpack_base64(sz) ::
  return Buffer.from(sz, 'base64')

export function packBody(body) ::
  return Buffer.from @ null!=body ? body : ''

export function packBody64(body) ::
  if ! isBuffer(body) ::
    body = Buffer.from(body)
  return packBody(body).toString('base64')

export function concatBody(parts) ::
  return Buffer.concat(parts)
