import {PassThrough} from 'stream'
import stream_common from './_stream_common.jsy'

export default function direct_stream_plugin(plugin_options={}) ::
  const pi_name = plugin_options.name || 'direct_stream'

  return function(hub) ::
    const _common_ = stream_common(hub)
    const plugin = Object.assign @ connect, @{}
      connect, connectDirectPair, createDirectChannel
    return hub[pi_name] = plugin

    function connect(peer) ::
      return connectDirectPair(peer)[0]

    function connectDirectPair(peer, channel_id) ::
      if peer[pi_name] && 'function' === typeof peer[pi_name].createDirectChannel ::
        peer = peer[pi_name]

      const streams = @[] new PassThrough(), new PassThrough()
      return @[]
        createDirectChannel @ streams[0], streams[1], channel_id
        peer.createDirectChannel @ streams[1], streams[0], channel_id

    function createDirectChannel(rstream, wstream, channel_id) ::
      if ! channel_id :: channel_id = 'stream'
      const channel = _common_.createRWChannel(rstream, wstream, channel_id)
      channel.peer_info = hub.p2p.hello(channel)
      return Promise.resolve(channel)
