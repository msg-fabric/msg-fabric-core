import {URL} from 'url'
import {randomBytes} from 'crypto'

export default function nodejs_platform_plugin(plugin_options={}) ::
  return @: order: -9, subclass(FabricHub) ::

    for const base of [FabricHub, FabricHub.TargetRouter, FabricHub.P2PRouter] ::
      Object.assign @ base.prototype, @{} data_utils

const data_utils = @{}
  parse_url
  random, random_base64,
  pack_base64, unpack_base64
  decode_utf8, encode_utf8
  as_data, concat_data

Object.defineProperties @ data_utils, @{}
  _global_: {value: global}

function random(n) ::
  return randomBytes(n)

function random_base64(n) ::
  return randomBytes(n).toString('base64')

function parse_url(url) ::
  return new URL(url)

function pack_base64(data) ::
  return Buffer.from(data).toString('base64')

function unpack_base64(str_b64) ::
  return Buffer.from(str_b64, 'base64')

function decode_utf8(u8) ::
  return Buffer.from(u8).toString('utf-8')

function encode_utf8(str) ::
  return Buffer.from(str, 'utf-8')

function as_data(data) ::
  if null === data ::
    return Buffer([])
  return Buffer.isBuffer(data) ? data : Buffer.from(data)

function concat_data(parts) ::
  return Buffer.concat(parts)

