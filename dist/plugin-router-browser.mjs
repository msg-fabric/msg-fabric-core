import { createDataViewPacketParser } from 'msg-fabric-packet-stream';

function browser_router_plugin(plugin_options = {}) {
  return { subclass(FabricHub_PI, bases) {
      Object.assign(FabricHub_PI.prototype, {
        packetParser: createDataViewPacketParser(plugin_options),

        _init_router() {
          const id_self = random_id_self();
          const router = new bases.Router(id_self);
          router.allowUnverifiedRoutes = true;
          return router;
        } });
    } };
}

function random_id_self() {
  const ua = new Int32Array(1),
        dv = new DataView(ua.buffer);
  if ('undefined' !== typeof window) {
    window.crypto.getRandomValues(ua);
  } else {
    ua[0] = 0xffffffff * Math.random();
  }
  return dv.getInt32(0, true);
}

export default browser_router_plugin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGx1Z2luLXJvdXRlci1icm93c2VyLm1qcyIsInNvdXJjZXMiOlsiLi4vY29kZS9wbHVnaW5zL3JvdXRlci9icm93c2VyLmpzeSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NyZWF0ZURhdGFWaWV3UGFja2V0UGFyc2VyIGFzIGNyZWF0ZVBhY2tldFBhcnNlcn0gZnJvbSAnbXNnLWZhYnJpYy1wYWNrZXQtc3RyZWFtJ1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBicm93c2VyX3JvdXRlcl9wbHVnaW4ocGx1Z2luX29wdGlvbnM9e30pIDo6XG4gIHJldHVybiBAOiBzdWJjbGFzcyhGYWJyaWNIdWJfUEksIGJhc2VzKSA6OlxuICAgIE9iamVjdC5hc3NpZ24gQCBGYWJyaWNIdWJfUEkucHJvdG90eXBlLCBAOlxuICAgICAgcGFja2V0UGFyc2VyOiBjcmVhdGVQYWNrZXRQYXJzZXIgQCBwbHVnaW5fb3B0aW9uc1xuXG4gICAgICBfaW5pdF9yb3V0ZXIoKSA6OlxuICAgICAgICBjb25zdCBpZF9zZWxmID0gcmFuZG9tX2lkX3NlbGYoKVxuICAgICAgICBjb25zdCByb3V0ZXIgPSBuZXcgYmFzZXMuUm91dGVyKGlkX3NlbGYpXG4gICAgICAgIHJvdXRlci5hbGxvd1VudmVyaWZpZWRSb3V0ZXMgPSB0cnVlXG4gICAgICAgIHJldHVybiByb3V0ZXJcblxuZnVuY3Rpb24gcmFuZG9tX2lkX3NlbGYoKSA6OlxuICBjb25zdCB1YSA9IG5ldyBJbnQzMkFycmF5KDEpLCBkdiA9IG5ldyBEYXRhVmlldyh1YS5idWZmZXIpXG4gIGlmICd1bmRlZmluZWQnICE9PSB0eXBlb2Ygd2luZG93IDo6XG4gICAgd2luZG93LmNyeXB0by5nZXRSYW5kb21WYWx1ZXModWEpXG4gIGVsc2UgOjpcbiAgICB1YVswXSA9IDB4ZmZmZmZmZmYgKiBNYXRoLnJhbmRvbSgpXG4gIHJldHVybiBkdi5nZXRJbnQzMigwLCB0cnVlKVxuIl0sIm5hbWVzIjpbImJyb3dzZXJfcm91dGVyX3BsdWdpbiIsInBsdWdpbl9vcHRpb25zIiwic3ViY2xhc3MiLCJGYWJyaWNIdWJfUEkiLCJiYXNlcyIsImFzc2lnbiIsInByb3RvdHlwZSIsImNyZWF0ZVBhY2tldFBhcnNlciIsImlkX3NlbGYiLCJyYW5kb21faWRfc2VsZiIsInJvdXRlciIsIlJvdXRlciIsImFsbG93VW52ZXJpZmllZFJvdXRlcyIsInVhIiwiSW50MzJBcnJheSIsImR2IiwiRGF0YVZpZXciLCJidWZmZXIiLCJ3aW5kb3ciLCJjcnlwdG8iLCJnZXRSYW5kb21WYWx1ZXMiLCJNYXRoIiwicmFuZG9tIiwiZ2V0SW50MzIiXSwibWFwcGluZ3MiOiI7O0FBRWUsU0FBU0EscUJBQVQsQ0FBK0JDLGlCQUFlLEVBQTlDLEVBQWtEO1NBQ3RELEVBQUNDLFNBQVNDLFlBQVQsRUFBdUJDLEtBQXZCLEVBQThCO2FBQy9CQyxNQUFQLENBQWdCRixhQUFhRyxTQUE3QixFQUEwQztzQkFDMUJDLDJCQUFxQk4sY0FBckIsQ0FEMEI7O3VCQUd6QjtnQkFDUE8sVUFBVUMsZ0JBQWhCO2dCQUNNQyxTQUFTLElBQUlOLE1BQU1PLE1BQVYsQ0FBaUJILE9BQWpCLENBQWY7aUJBQ09JLHFCQUFQLEdBQStCLElBQS9CO2lCQUNPRixNQUFQO1NBUHNDLEVBQTFDO0tBRE8sRUFBVDs7O0FBVUYsU0FBU0QsY0FBVCxHQUEwQjtRQUNsQkksS0FBSyxJQUFJQyxVQUFKLENBQWUsQ0FBZixDQUFYO1FBQThCQyxLQUFLLElBQUlDLFFBQUosQ0FBYUgsR0FBR0ksTUFBaEIsQ0FBbkM7TUFDRyxnQkFBZ0IsT0FBT0MsTUFBMUIsRUFBbUM7V0FDMUJDLE1BQVAsQ0FBY0MsZUFBZCxDQUE4QlAsRUFBOUI7R0FERixNQUVLO09BQ0EsQ0FBSCxJQUFRLGFBQWFRLEtBQUtDLE1BQUwsRUFBckI7O1NBQ0tQLEdBQUdRLFFBQUgsQ0FBWSxDQUFaLEVBQWUsSUFBZixDQUFQOzs7OzsifQ==
